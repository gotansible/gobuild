---
- name: create build directories
  file:
    state=directory
    path={{ item }}
  with_items:
    - "{{ gobuild_dir }}"
    - "{{ gobuild_dir }}/xdg_config_home"
    - "{{ gobuild_dir }}/bin"
    - "{{ gobuild_dir }}/src"
    - "{{ gobuild_dir }}/src/{{ gobuild_project_path }}"

- name: allow get of git private repos
  shell: git config --global url."ssh://git@github.com:".insteadOf "https://github.com/"
  environment:
    XDG_CONFIG_HOME: "{{ gobuild_dir }}/xdg_config_home"
  when: gobuild_keyfile != ''

- name: checkout code to build dir - no key
  git:
    repo={{ gobuild_repo_url }}
    version={{ gobuild_repo_version }}
    depth=1
    update=yes
    accept_hostkey=yes
    dest={{ gobuild_dir }}/src/{{ gobuild_project_path }}
    force=yes
    recursive=yes
  when: "{{ gobuild_keyfile|length == 0 }}"

- name: checkout code to build dir - with key
  git:
    repo={{ gobuild_repo_url }}
    version={{ gobuild_repo_version }}
    depth=1
    update=yes
    accept_hostkey=yes
    dest={{ gobuild_dir }}/src/{{ gobuild_project_path }}
    force=yes
    recursive=yes
    key_file={{ gobuild_keyfile }}
  when: "{{ gobuild_keyfile|length > 0 }}"

#- name: get gopath from gimme
#  shell: cat ~/.gimme/envs/latest.env | grep GOROOT | awk 'BEGIN { FS="=";} { print $2;}' | awk ' BEGIN { FS="\"";} { print $2;}'
#  register: gimme_gopath
#  changed_when: False
#
#- set_fact:
#    goroot: "{{gimme_gopath.stdout}}"

- name: build with commands
  command: "{{ item }}"
  args:  
    chdir: "{{ gobuild_dir }}/src/{{ gobuild_project_path }}/"
  environment:
    GOPATH: "{{ gobuild_dir }}"
    GOBIN: "{{ gobuild_dir }}/bin"
    GOROOT: "{{ gobuild_goroot }}"
    PATH: "{{ ansible_env.PATH }}:{{ gobuild_goroot }}/bin:{{ gobuild_dir }}/bin"
  with_items: gobuild_commands
  when: gobuild_commands|length > 0

- name: build with go build
  include: gobuild.yml
  when: gobuild_commands|length == 0


