---

- name: build - gitconfig dir
  file:
    state=directory
    path={{ item }}
  with_items:
    = "{{ gobuild_gitconfig | dirname }}"

- name: build - touch gitconfig
  file:
    state=touch
    path={{ gobuild_gitconfig }}
  changed_when: False

- name: allow get of git private repos
  shell: git config -f {{ gobuild_gitconfig }} url."ssh://git@github.com:".insteadOf "https://github.com/"
  when: gobuild_keyfile != ''

# not clear how to find out if go get did anything
- name: go get dependencies
  command: "{{ gobuild_goroot }}/bin/go get -t -d"
  args:
    chdir: "{{ gobuild_dir }}/src/{{ gobuild_project_path }}"
  environment:
    XDG_CONFIG_HOME: "{{ gobuild_dir }}/xdg_config_home"
    GOPATH: "{{ gobuild_dir }}"
    GOBIN: "{{ gobuild_dir }}/bin"
    GOROOT: "{{ gobuild_goroot }}"
    GIT_CONFIG: "{{ gobuild_gitconfig }}"
  changed_when: False

- name: check for Godeps/Godeps.json
  stat: path="{{ gobuild_dir }}/src/{{ gobuild_project_path }}/Godeps/Godeps.json"
  register: godep_required

- name: is godep installed already
  stat: path="{{ gobuild_dir }}/src/{{ gobuild_project_path }}/Godeps/Godeps.json"
  register: godep_installed
  when: godep_required.stat.exists

- name: get godep
  command: "{{ gobuild_goroot }}/bin/go get github.com/tools/godep"
  args:
    chdir: "{{ gobuild_dir }}/src/{{ gobuild_project_path }}"
  environment:
    XDG_CONFIG_HOME: "{{ gobuild_dir }}/xdg_config_home"
    GOPATH: "{{ gobuild_dir }}"
    GOBIN: "{{ gobuild_dir }}/bin"
    GOROOT: "{{ gobuild_goroot }}"
    GIT_CONFIG: "{{ gobuild_gitconfig }}"
  when: godep_required.stat.exists and not godep_installed.stat.exists

- name: restore godep dependencies
  command: "{{ gobuild_dir }}/bin/godep restore"
  args:
    chdir: "{{ gobuild_dir }}/src/{{ gobuild_project_path }}"
  environment:
    XDG_CONFIG_HOME: "{{ gobuild_dir }}/xdg_config_home"
    GOPATH: "{{ gobuild_dir }}"
    GOBIN: "{{ gobuild_dir }}/bin"
    GOROOT: "{{ gobuild_goroot }}"
    GIT_CONFIG: "{{ gobuild_gitconfig }}"
  when: godep_required.stat.exists

- name: go install 
  shell: "{{ gobuild_goroot }}/bin/go install {{ gobuild_build_flags }}"
  args:
    chdir: "{{ gobuild_dir }}/src/{{ gobuild_project_path }}"
  environment:
    XDG_CONFIG_HOME: "{{ gobuild_dir }}/xdg_config_home"
    GOPATH: "{{ gobuild_dir }}"
    GOBIN: "{{ gobuild_dir }}/bin"
    GOROOT: "{{ gobuild_goroot }}"
    GIT_CONFIG: "{{ gobuild_gitconfig }}"
  register: result


